[project]
name = "django-fbv"
authors = [{"name" = "Adam Hill", "email" = "adam@adamghill.com"}]
version = "0.7.0"
description = "Utilities to make function-based views cleaner, more efficient, and better tasting. "
readme = "README.md"
requires-python = ">=3.10"
license = "BSD-3-Clause"
keywords = [
  "django",
  "web",
  "python",
  "django",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Django",
    "Framework :: Django :: 3",
    "Framework :: Django :: 4",
    "Framework :: Django :: 5",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "django > 2.2.0",
    "typeguard >= 2",
]

[dependency-groups]
dev = [
    "pytest < 9",
    "pytest-django >= 0",
    "pytest-cov >= 0",
    "mypy >= 0",
    "sphinx-autobuild >= 2021.3.14",
    "coverage[toml] >= 6",
    "django-stubs >= 1",
    "types-toml",
]
docs = [
    "Sphinx >= 4.3.2",
    "linkify-it-py >= 1.0.3",
    "myst-parser >= 0.16.1",
    "furo >= 2021.11.23",
    "sphinx-copybutton >= 0.4.0",
    "toml",
    "attrs >= 21.4.0"
]

[project.urls]
Repository = "https://github.com/adamghill/django-fbv"
Homepage = "https://github.com/adamghill/django-fbv"
Documentation = "https://django-fbv.adamghill.com"
Funding = "https://github.com/sponsors/adamghill"

[tool.ruff]
src = ["src"]
exclude = []
target-version = "py310"
line-length = 120
lint.select = [
  "A",
  "ARG",
  "B",
  "C",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
lint.ignore = [
  # Allow non-abstract empty methods in abstract base classes
  "B027",
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  "FBT003",
  # Ignore checks for possible passwords
  "S105", "S106", "S107",
  # Ignore complexity
  "C901", "PLR0911", "PLR0912", "PLR0913", "PLR0915",
  # Ignore unused variables
  "F841",
   # Ignore exception strings
  "EM101", "EM102",
]
lint.unfixable = [
  # Don't touch unused imports
  "F401",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["fbv"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.per-file-ignores]
# Tests can use magic values, assertions, and relative imports
"tests/**/*" = ["PLR2004", "S101", "TID252", "ARG001"]

[tool.pytest.ini_options]
addopts = "--quiet --failed-first -p no:warnings --reuse-db --no-migrations -m \"not slow\""
testpaths = [
    "tests"
]
markers = [
    "slow: marks tests as slow",
]

[tool.coverage.run]
branch = true
parallel = true

[tool.coverage.report]
show_missing = true
skip_covered = true
skip_empty = true
sort = "cover"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true

[tool.uv.build-backend]
module-name = "fbv"

[build-system]
requires = ["uv_build>=0.8.12,<0.9.0"]
build-backend = "uv_build"
